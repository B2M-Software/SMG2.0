
package ch.iec._61400.ews._1;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

import ch.iec._61400.ews._1_0.ServicePortType;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "IECXMLService", targetNamespace = "http://iec.ch/61400/ews/1.0/", wsdlLocation = "file:/D:/Data/mchn1600/ganymede/workspace/61400TestClient/IEC61400-25-4WSDL2%209_05%2003%202008.wsdl")
public class IECXMLService
    extends Service
{

    private final static URL IECXMLSERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(ch.iec._61400.ews._1.IECXMLService.class.getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = ch.iec._61400.ews._1.IECXMLService.class.getResource(".");
            url = new URL(baseUrl, "file:/D:/Data/mchn1600/ganymede/workspace/61400TestClient/IEC61400-25-4WSDL2%209_05%2003%202008.wsdl");
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: 'file:/D:/Data/mchn1600/ganymede/workspace/61400TestClient/IEC61400-25-4WSDL2%209_05%2003%202008.wsdl', retrying as a local file");
            logger.warning(e.getMessage());
        }
        IECXMLSERVICE_WSDL_LOCATION = url;
    }

    public IECXMLService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public IECXMLService() {
        super(IECXMLSERVICE_WSDL_LOCATION, new QName("http://iec.ch/61400/ews/1.0/", "IECXMLService"));
    }

    /**
     * 
     * @return
     *     returns ServicePortType
     */
    @WebEndpoint(name = "IECXMLServicePort")
    public ServicePortType getIECXMLServicePort() {
        return super.getPort(new QName("http://iec.ch/61400/ews/1.0/", "IECXMLServicePort"), ServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ServicePortType
     */
    @WebEndpoint(name = "IECXMLServicePort")
    public ServicePortType getIECXMLServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://iec.ch/61400/ews/1.0/", "IECXMLServicePort"), ServicePortType.class, features);
    }

}
