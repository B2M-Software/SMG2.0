/*
 * Copyright (c) 2011-2015, fortiss GmbH.
 * Licensed under the Apache License, Version 2.0.
 *
 * Use, modification and distribution are subject to the terms specified
 * in the accompanying license file LICENSE.txt located at the root directory
 * of this software distribution.
 */
package org.fortiss.smg.optimizer.local;

/***
 * Dummy datum for testing the optimizer.
 * 
 * @author Cheng Zhang
 *
 */
public class Local {

	/** Duration of interval */
	public static double duration = 0.25;

	/** Date of interval */
	public static String[] date = { "2014-09-04 00:00:00",
			"2014-09-04 00:15:00", "2014-09-04 00:30:00",
			"2014-09-04 00:45:00", "2014-09-04 01:00:00",
			"2014-09-04 01:15:00", "2014-09-04 01:30:00",
			"2014-09-04 01:45:00", "2014-09-04 02:00:00",
			"2014-09-04 02:15:00", "2014-09-04 02:30:00",
			"2014-09-04 02:45:00", "2014-09-04 03:00:00",
			"2014-09-04 03:15:00", "2014-09-04 03:30:00",
			"2014-09-04 03:45:00", "2014-09-04 04:00:00",
			"2014-09-04 04:15:00", "2014-09-04 04:30:00",
			"2014-09-04 04:45:00", "2014-09-04 05:00:00",
			"2014-09-04 05:15:00", "2014-09-04 05:30:00",
			"2014-09-04 05:45:00", "2014-09-04 06:00:00",
			"2014-09-04 06:15:00", "2014-09-04 06:30:00",
			"2014-09-04 06:45:00", "2014-09-04 07:00:00",
			"2014-09-04 07:15:00", "2014-09-04 07:30:00",
			"2014-09-04 07:45:00", "2014-09-04 08:00:00",
			"2014-09-04 08:15:00", "2014-09-04 08:30:00",
			"2014-09-04 08:45:00", "2014-09-04 09:00:00",
			"2014-09-04 09:15:00", "2014-09-04 09:30:00",
			"2014-09-04 09:45:00", "2014-09-04 10:00:00",
			"2014-09-04 10:15:00", "2014-09-04 10:30:00",
			"2014-09-04 10:45:00", "2014-09-04 11:00:00",
			"2014-09-04 11:15:00", "2014-09-04 11:30:00",
			"2014-09-04 11:45:00", "2014-09-04 12:00:00",
			"2014-09-04 12:15:00", "2014-09-04 12:30:00",
			"2014-09-04 12:45:00", "2014-09-04 13:00:00",
			"2014-09-04 13:15:00", "2014-09-04 13:30:00",
			"2014-09-04 13:45:00", "2014-09-04 14:00:00",
			"2014-09-04 14:15:00", "2014-09-04 14:30:00",
			"2014-09-04 14:45:00", "2014-09-04 15:00:00",
			"2014-09-04 15:15:00", "2014-09-04 15:30:00",
			"2014-09-04 15:45:00", "2014-09-04 16:00:00",
			"2014-09-04 16:15:00", "2014-09-04 16:30:00",
			"2014-09-04 16:45:00", "2014-09-04 17:00:00",
			"2014-09-04 17:15:00", "2014-09-04 17:30:00",
			"2014-09-04 17:45:00", "2014-09-04 18:00:00",
			"2014-09-04 18:15:00", "2014-09-04 18:30:00",
			"2014-09-04 18:45:00", "2014-09-04 19:00:00",
			"2014-09-04 19:15:00", "2014-09-04 19:30:00",
			"2014-09-04 19:45:00", "2014-09-04 20:00:00",
			"2014-09-04 20:15:00", "2014-09-04 20:30:00",
			"2014-09-04 20:45:00", "2014-09-04 21:00:00",
			"2014-09-04 21:15:00", "2014-09-04 21:30:00",
			"2014-09-04 21:45:00", "2014-09-04 22:00:00",
			"2014-09-04 22:15:00", "2014-09-04 22:30:00",
			"2014-09-04 22:45:00", "2014-09-04 23:00:00",
			"2014-09-04 23:15:00", "2014-09-04 23:30:00", "2014-09-04 23:45:00" };

	/** Consumption of interval */
	public static double[] forecastConsumption = { 4233.26, 7186.26, 4929.04,
			5100.33, 4862.31, 4812.75, 4403.49, 5540.06, 4303.50, 4119.04,
			4249.20, 5016.61, 4248.82, 5352.67, 4661.27, 5276.97, 4930.09,
			4171.32, 5308.57, 4234.78, 5254.31, 5367.60, 4747.11, 4264.99,
			6171.14, 4567.11, 4933.44, 5913.15, 3659.64, 5013.79, 5406.13,
			5786.05, 6494.38, 10263.66, 7163.81, 7926.62, 8822.68, 12463.73,
			11954.01, 10714.96, 11043.07, 11366.22, 13978.93, 12141.72,
			13579.74, 13332.56, 9522.38, 11720.20, 12490.54, 10600.02, 9642.23,
			11821.66, 10309.61, 11698.69, 11208.50, 14266.74, 11990.70,
			13458.12, 10791.42, 11345.33, 13876.70, 15739.40, 12051.29,
			10743.85, 11750.21, 10356.49, 11385.45, 10157.70, 10626.93,
			8698.55, 10889.43, 9329.68, 7376.94, 6291.67, 5037.46, 5655.64,
			6107.70, 5868.78, 4609.40, 8949.26, 7666.23, 7830.11, 3816.28,
			4131.94, 4853.14, 4010.42, 4487.61, 4775.79, 4918.11, 3599.57,
			2775.01, 2793.47, 2581.02, 3648.47, 3480.18, 2803.60 };

	/** Original Generation of interval */
	public static double[] originalForecastGeneration = { 0.00, 0.00, 0.00,
			0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,
			0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,
			0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 12.00, 38.00, 33.00, 130.00,
			219.00, 262.00, 109.00, 228.00, 282.00, 282.00, 524.00, 811.00,
			453.00, 682.00, 1073.00, 1113.00, 1499.00, 1370.00, 1270.00,
			1939.00, 1464.00, 1489.00, 964.00, 3000.00, 3318.00, 1353.00,
			3772.00, 3735.00, 1998.00, 1841.00, 3353.00, 3284.00, 1253.00,
			1919.00, 2506.00, 1432.00, 1164.00, 1140.00, 1664.00, 838.00,
			488.00, 578.00, 458.00, 424.00, 319.00, 173.00, 76.00, 0.00, 0.00,
			0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,
			0.00, 0.00, 0.00, 0.00, 0.00 };

	/** Generation of interval */
	public static double[] forecastGeneration = { 0.00, 0.00, 0.00, 0.00, 0.00,
			0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,
			0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,
			0.00, 0.00, 0.00, 0.00, -96.00, -304.00, -264.00, -1040.00,
			-1752.00, -2096.00, -872.00, -1824.00, -2256.00, -2256.00,
			-4192.00, -6488.00, -3624.00, -5456.00, -8584.00, -8904.00,
			-11992.00, -10960.00, -10160.00, -15512.00, -11712.00, -11912.00,
			-7712.00, -20000.00, -20000.00, -10824.00, -20000.00, -20000.00,
			-15984.00, -14728.00, -20000.00, -20000.00, -10024.00, -15352.00,
			-20000.00, -11456.00, -9312.00, -9120.00, -13312.00, -6704.00,
			-3904.00, -4624.00, -3664.00, -3392.00, -2552.00, -1384.00,
			-608.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00,
			0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00 };

	/** RTP price of interval */
	public static double[] RTP = { 18.00, 18.00, 18.00, 18.00, 15.00, 15.00,
			15.00, 15.00, 12.00, 12.00, 12.00, 12.00, 11.40, 11.40, 11.40,
			11.40, 9.00, 9.00, 9.00, 9.00, 9.00, 9.00, 9.00, 9.00, 7.50, 7.50,
			7.50, 7.50, 11.40, 11.40, 11.40, 11.40, 12.60, 12.60, 12.60, 12.60,
			18.00, 18.00, 18.00, 18.00, 18.60, 18.60, 18.60, 18.60, 21.00,
			21.00, 21.00, 21.00, 21.60, 21.60, 21.60, 21.60, 18.60, 18.60,
			18.60, 18.60, 18.00, 18.00, 18.00, 18.00, 16.80, 16.80, 16.80,
			16.80, 18.60, 18.60, 18.60, 18.60, 23.40, 23.40, 23.40, 23.40,
			27.60, 27.60, 27.60, 27.60, 28.20, 28.20, 28.20, 28.20, 23.40,
			23.40, 23.40, 23.40, 21.00, 21.00, 21.00, 21.00, 19.20, 19.20,
			19.20, 19.20, 18.60, 18.60, 18.60, 18.60 };

	/** TOU_DE price of interval */
	public static double[] TOU_DE = { 20.38, 20.38, 20.38, 20.38, 20.38, 20.38,
			20.38, 20.38, 20.38, 20.38, 20.38, 20.38, 20.38, 20.38, 20.38,
			20.38, 20.38, 20.38, 20.38, 20.38, 20.38, 20.38, 20.38, 20.38,
			20.38, 20.38, 20.38, 20.38, 23.38, 23.38, 23.38, 23.38, 23.38,
			23.38, 23.38, 23.38, 23.38, 23.38, 23.38, 23.38, 23.38, 23.38,
			23.38, 23.38, 23.38, 23.38, 23.38, 23.38, 23.38, 23.38, 23.38,
			23.38, 23.38, 23.38, 23.38, 23.38, 23.38, 23.38, 23.38, 23.38,
			23.38, 23.38, 23.38, 23.38, 23.38, 23.38, 23.38, 23.38, 23.38,
			23.38, 23.38, 23.38, 23.38, 23.38, 23.38, 23.38, 23.38, 23.38,
			23.38, 23.38, 23.38, 23.38, 23.38, 23.38, 23.38, 23.38, 23.38,
			23.38, 20.38, 20.38, 20.38, 20.38, 20.38, 20.38, 20.38, 20.38 };

	/** TOU_US_W price of interval */
	public static double[] TOU_US_W = { 14.45, 14.45, 14.45, 14.45, 14.45,
			14.45, 14.45, 14.45, 14.45, 14.45, 14.45, 14.45, 14.45, 14.45,
			14.45, 14.45, 14.45, 14.45, 14.45, 14.45, 14.45, 14.45, 14.45,
			14.45, 14.45, 14.45, 14.45, 14.45, 23.35, 23.35, 23.35, 23.35,
			23.35, 23.35, 23.35, 23.35, 23.35, 23.35, 23.35, 23.35, 18.90,
			18.90, 18.90, 18.90, 18.90, 18.90, 18.90, 18.90, 18.90, 18.90,
			18.90, 18.90, 18.90, 18.90, 18.90, 18.90, 18.90, 18.90, 18.90,
			18.90, 18.90, 18.90, 18.90, 18.90, 23.35, 23.35, 23.35, 23.35,
			23.35, 23.35, 23.35, 23.35, 23.35, 23.35, 23.35, 23.35, 23.35,
			23.35, 23.35, 23.35, 23.35, 23.35, 23.35, 23.35, 14.45, 14.45,
			14.45, 14.45, 14.45, 14.45, 14.45, 14.45, 14.45, 14.45, 14.45,
			14.45 };

	/** TOU_US_S price of interval */
	public static double[] TOU_US_S = { 14.45, 14.45, 14.45, 14.45, 14.45,
			14.45, 14.45, 14.45, 14.45, 14.45, 14.45, 14.45, 14.45, 14.45,
			14.45, 14.45, 14.45, 14.45, 14.45, 14.45, 14.45, 14.45, 14.45,
			14.45, 14.45, 14.45, 14.45, 14.45, 18.90, 18.90, 18.90, 18.90,
			18.90, 18.90, 18.90, 18.90, 18.90, 18.90, 18.90, 18.90, 18.90,
			18.90, 18.90, 18.90, 23.35, 23.35, 23.35, 23.35, 23.35, 23.35,
			23.35, 23.35, 23.35, 23.35, 23.35, 23.35, 23.35, 23.35, 23.35,
			23.35, 23.35, 23.35, 23.35, 23.35, 23.35, 23.35, 23.35, 23.35,
			18.90, 18.90, 18.90, 18.90, 18.90, 18.90, 18.90, 18.90, 18.90,
			18.90, 18.90, 18.90, 18.90, 18.90, 18.90, 18.90, 14.45, 14.45,
			14.45, 14.45, 14.45, 14.45, 14.45, 14.45, 14.45, 14.45, 14.45,
			14.45 };

}
